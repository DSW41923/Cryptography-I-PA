from numbthy import inverse_mod, power_mod

p = 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171

g = 11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568

h = 3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333

table = []

B = 2**20

for x1 in range(B + 1):
    denominator = inverse_mod(power_mod(g, x1, p), p)
    table.append((h * denominator) % p)

for x0 in range(B + 1):
    power = B * x0
    trial = power_mod(g, power, p)
    print 'Try ' + str(x0)
    try:
        x1 = table.index(trial)
        print x0, x1
        print x0 * B + x1
        break
    except ValueError:
        continue
